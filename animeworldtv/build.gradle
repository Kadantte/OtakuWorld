plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion Deps.compileVersion
    buildToolsVersion Deps.buildVersion

    defaultConfig {
        applicationId "com.programmersbox.animeworldtv"
        minSdkVersion Deps.minimumSdk
        targetSdkVersion Deps.targetSdk
        versionCode 1
        versionName Deps.otakuVersionName

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "version"
    productFlavors {
        noFirebase {
            dimension "version"
        }
        full {
            dimension "version"
        }
    }

    configurations.all {
        resolutionStrategy.force "androidx.lifecycle:lifecycle-viewmodel:2.5.0"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation androidCore
    implementation appCompat
    implementation 'androidx.leanback:leanback:1.2.0-alpha02'
    implementation 'androidx.leanback:leanback-preference:1.2.0-alpha02'
    implementation glide
    kapt glideCompiler

    implementation rxkotlin
    implementation rxandroid
    implementation rxbinding
    implementation rxbindingKotlin
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation material
    implementation constraintlayout

    implementation firebaseCrash.crash

    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation play_services

    //implementation project(':UIViews')

    implementation Deps.palette

    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:$media3_version"

    // For DASH playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-dash:$media3_version"
    // For HLS playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-hls:$media3_version"
    // For RTSP playback support with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-rtsp:$media3_version"
    // For ad insertion using the Interactive Media Ads SDK with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-ima:$media3_version"

    // For loading data using the Cronet network stack
    implementation "androidx.media3:media3-datasource-cronet:$media3_version"
    // For loading data using the OkHttp network stack
    implementation "androidx.media3:media3-datasource-okhttp:$media3_version"
    // For loading data using librtmp
    implementation "androidx.media3:media3-datasource-rtmp:$media3_version"

    // For building media playback UIs
    implementation "androidx.media3:media3-ui:$media3_version"
    // For building media playback UIs for Android TV using the Jetpack Leanback library
    implementation "androidx.media3:media3-ui-leanback:$media3_version"

    // For exposing and controlling media sessions
    implementation "androidx.media3:media3-session:$media3_version"

    // For extracting data from media containers
    implementation "androidx.media3:media3-extractor:$media3_version"

    // For integrating with Cast
    implementation "androidx.media3:media3-cast:$media3_version"

    // For scheduling background operations using Jetpack Work's WorkManager with ExoPlayer
    implementation "androidx.media3:media3-exoplayer-workmanager:$media3_version"

    // For transforming media files
    implementation "androidx.media3:media3-transformer:$media3_version"

    // Utilities for testing media components (including ExoPlayer components)
    implementation "androidx.media3:media3-test-utils:$media3_version"
    // Utilities for testing media components (including ExoPlayer components) via Robolectric
    implementation "androidx.media3:media3-test-utils-robolectric:$media3_version"

    // Common functionality for media database components
    implementation "androidx.media3:media3-database:$media3_version"
    // Common functionality for media decoders
    implementation "androidx.media3:media3-decoder:$media3_version"
    // Common functionality for loading data
    implementation "androidx.media3:media3-datasource:$media3_version"
    // Common functionality used across multiple media libraries
    implementation "androidx.media3:media3-common:$media3_version"

    implementation project(':Models')
    implementation project(':anime_sources')
    implementation project(':favoritesdatabase')
    implementation project(':sharedutils')

    implementation room.room

    //Custom Libraries
    implementation jakepurple13Tools.helpfultools

    implementation koin.koin
}
