name: Release Workflow
 
on:
  push:
   tags:
      - 'v*'
   paths-ignore: 
     - '.github/**'
     
  workflow_dispatch:

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - run: echo $ANIME_GOOGLE_SERVICES_JSON > animeworld/google-services.json
        env:
          ANIME_GOOGLE_SERVICES_JSON: ${{ secrets.ANIME_SERVICES }}
      - run: echo $MANGA_GOOGLE_SERVICES_JSON > mangaworld/google-services.json
        env:
          MANGA_GOOGLE_SERVICES_JSON: ${{ secrets.MANGA_SERVICES }}
      - run: echo $NOVEL_GOOGLE_SERVICES_JSON > novelworld/google-services.json
        env:
          NOVEL_GOOGLE_SERVICES_JSON: ${{ secrets.NOVEL_SERVICES }}
      - run: echo $ANIME_TV_GOOGLE_SERVICES_JSON > animeworldtv/google-services.json
        env:
          ANIME_TV_GOOGLE_SERVICES_JSON: ${{ secrets.ANIME_TV_SERVICES }}
      - run: echo OTAKU_MANAGER_GOOGLE_SERVICES_JSON > otakumanager/google-services.json
        env:
          OTAKU_MANAGER_GOOGLE_SERVICES_JSON: ${{ secrets.OTAKU_MANAGER_SERVICES }}

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      #       - name: Build APK
      #         run: bash ./gradlew assembleRelease --stacktrace

      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: 7.0.2
          wrapper-cache-enabled: false
          dependencies-cache-enabled: false
          configuration-cache-enabled: false
          arguments: assembleRelease
        
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: manga_sign
        with:
          releaseDirectory: mangaworld/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: anime_sign
        with:
          releaseDirectory: animeworld/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}    
          
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: novel_sign
        with:
          releaseDirectory: novelworld/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: animetv_sign
        with:
          releaseDirectory: animeworldtv/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: otakumanager_sign
        with:
          releaseDirectory: otakumanager/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # ${{steps.sign_app.outputs.signedReleaseFile}}
      - name: Clean up build artifacts
        run: |
          cp ${{ steps.manga_sign.outputs.signedReleaseFile }} mangaworld-release.apk
          cp ${{ steps.anime_sign.outputs.signedReleaseFile }} animeworld-release.apk
          cp ${{ steps.novel_sign.outputs.signedReleaseFile }} novelworld-release.apk
          cp ${{ steps.animetv_sign.outputs.signedReleaseFile }} animeworldtv-release.apk
          cp ${{ steps.otakumanager_sign.outputs.signedReleaseFile }} otakumanager-release.apk


      - uses: actions/upload-artifact@v2
        with:
          name: Signed Manga App
          path: mangaworld-release.apk
          
      - uses: actions/upload-artifact@v2
        with:
          name: Signed Anime App
          path: animeworld-release.apk

      - uses: actions/upload-artifact@v2
        with:
          name: Signed Novel App
          path: novelworld-release.apk

      - uses: actions/upload-artifact@v2
        with:
          name: Signed AnimeTV App
          path: animeworldtv-release.apk

      - uses: actions/upload-artifact@v2
        with:
          name: Signed OtakuManager App
          path: otakumanager-release.apk

          #       - name: Upload APK
          #         uses: actions/upload-artifact@v1
          #         with:
          #           name: apk
          #           path: animeworld/build/outputs/apk/debug/animeworld-debug.apk
          #       - name: Upload APK
          #         uses: actions/upload-artifact@v1
          #         with:
          #           name: apk
#           path: mangaworld/build/outputs/apk/debug/mangaworld-debug.apk 
#       - name: Upload APK
#         uses: actions/upload-artifact@v1
#         with:
#           name: apk
#           path: novelworld/build/outputs/apk/debug/novelworld-debug.apk 
          
  release:
    name: Release APK
    needs: apk
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: Signed Anime App
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: Signed Manga App
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: Signed Novel App
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: Signed AnimeTV App
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: Signed OtakuManager App

     - name: Get tag name
       id: get_tag_name
       run: |
         set -x
         echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
     - name: Create Release
       id: create_release
       uses: softprops/action-gh-release@v1
       if: startsWith(github.ref, 'refs/tags/')
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ env.VERSION_TAG }}
         name: Release ${{ env.VERSION_TAG }}
         files: |
            Signed Manga App/mangaworld-release.apk
            Signed Anime App/animeworld-release.apk
            Signed Novel App/novelworld-release.apk
            Signed AnimeTV App/animeworldtv-release.apk
            Signed OtakuManager App/otakumanager-release.apk

     - name: Discord notification
       env:
         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
       uses: Ilshidur/action-discord@master
       with:
         args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'
