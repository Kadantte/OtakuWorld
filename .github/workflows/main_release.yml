name: Minimal Android CI Workflow
 
on:
  workflow_dispatch:
   

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - run: echo $ANIME_GOOGLE_SERVICES_JSON > animeworld/google-services.json
        env:
          ANIME_GOOGLE_SERVICES_JSON: ${{ secrets.ANIME_SERVICES }}
      - run: echo $MANGA_GOOGLE_SERVICES_JSON > mangaworld/google-services.json
        env:
          MANGA_GOOGLE_SERVICES_JSON: ${{ secrets.MANGA_SERVICES }}
      - run: echo $NOVEL_GOOGLE_SERVICES_JSON > novelworld/google-services.json
        env:
          NOVEL_GOOGLE_SERVICES_JSON: ${{ secrets.NOVEL_SERVICES }}
          
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
        
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
          
          

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: animeworld/build/outputs/apk/debug/animeworld-debug.apk 
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: mangaworld/build/outputs/apk/debug/mangaworld-debug.apk 
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: novelworld/build/outputs/apk/debug/novelworld-debug.apk 
          
  release:
    name: Release APK
    needs: apk
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: apk  
     - name: Get tag name
       id: get_tag_name
       run: |
         set -x
         echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
#      - name: Create Release
#        id: create_release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.VERSION_TAG }}
#          name: Release ${{ env.VERSION_TAG }}
#          files: |
#             apk/mangaworld-debug.apk
#             apk/animeworld-debug.apk
#             apk/novelworld-debug.apk
